{"ast":null,"code":"//110\n// import React, { useReducer, useEffect } from \"react\";\n// import axios from \"axios\";\n// const initialState = {\n//   isLoading: true,\n//   post: {},\n//   error: \"\",\n// };\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"SUCCESS\":\n//       return {\n//         isLoading: false,\n//         post: action.payload,\n//         error: \"\",\n//       };\n//     case \"FAILED\":\n//       return {\n//         isLoading: false,\n//         post: {},\n//         error: \"An Error Occured\",\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// const NewGetData = () => {\n//   const [data, dispatch] = useReducer(reducer, initialState);\n//   useEffect(() => {\n//     axios\n//       .get(\"https://jsonplaceholder.typicode.com/posts/1\")\n//       .then((response) => {\n//         dispatch({ type: \"SUCCESS\", payload: response.data });\n//       })\n//       .catch((error) => {\n//         dispatch({ type: \"FAILED\" });\n//       });\n//   }, []);\n//   return (\n//     <div>\n//        {data.isLoading ? \"Loading ...\" : data.post.body}\n//        {data.error && data.error}\n//     </div>\n//   );\n// };\n// export default NewGetData;","map":{"version":3,"names":[],"sources":["C:/Users/AMIN/Desktop/ReactTutorial/my-project/src/components/NewGetData.js"],"sourcesContent":["//110\r\n// import React, { useReducer, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const initialState = {\r\n//   isLoading: true,\r\n//   post: {},\r\n//   error: \"\",\r\n// };\r\n\r\n// const reducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"SUCCESS\":\r\n//       return {\r\n//         isLoading: false,\r\n//         post: action.payload,\r\n//         error: \"\",\r\n//       };\r\n\r\n//     case \"FAILED\":\r\n//       return {\r\n//         isLoading: false,\r\n//         post: {},\r\n//         error: \"An Error Occured\",\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const NewGetData = () => {\r\n//   const [data, dispatch] = useReducer(reducer, initialState);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n//       .then((response) => {\r\n//         dispatch({ type: \"SUCCESS\", payload: response.data });\r\n//       })\r\n//       .catch((error) => {\r\n//         dispatch({ type: \"FAILED\" });\r\n//       });\r\n//   }, []);\r\n//   return (\r\n//     <div>\r\n//        {data.isLoading ? \"Loading ...\" : data.post.body}\r\n//        {data.error && data.error}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewGetData;\r\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}